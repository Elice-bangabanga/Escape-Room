import { React, Fragment, useState } from 'react';
import tw from 'tailwind-styled-components';
import { Listbox, Transition } from '@headlessui/react';
import { CheckIcon, ChevronUpDownIcon } from '@heroicons/react/20/solid';
import Background from '../components/common/Background';
import Navigators from '../components/common/Navigators';
import { RegionButton } from '../components/buttons/Buttons';
// import CafeData from '../mocks/cafeData.json';
// import Paging from '../components/common/Pagination';
import * as Api from '../utils/api';
import { useEffect } from 'react';

function classNames(...classes) {
  return classes.filter(Boolean).join(' ');
}

const CafeList = () => {
  const REGION_DATA = ['Ï†ÑÏ≤¥', 'ÌôçÎåÄ', 'Í∞ïÎÇ®', 'Í±¥ÎåÄ'];
  // const [list, setList] = useState(CafeData);
  // const [list, setList] = useState(null);
  const [list, setList] = useState([]);
  //Ïó¨Í∏∞ÏÑú initial ValueÎ•º Îπà Í∞ùÏ≤¥Î°ú Ï§òÏïºÌñàÎäîÎç∞ Ï†úÍ∞Ä Ïã§ÏàòÌñàÎÑ§Ïöî „Öé„ÖéüòÖÏ£ÑÏÜ°

  /**ÏõêÎûò ÏûëÏÑ±ÌïòÏã† ÏΩîÎìú */
  // useEffect(() => {
  //   const CafeData = async () => {
  //     const data = await Api.get('/api/all');
  //     console.log(data);
  //     setList(data);
  //   };
  // });

  /** ÏõêÎûò ÏûëÏÑ±ÌïòÏã† ÏΩîÎìúÏù∏ ÏúÑ Î∂ÄÎ∂ÑÏóêÏÑú Î¨∏Ï†úÍ∞Ä ÎêòÏóàÎçò Î∂ÄÎ∂ÑÏùÑ Ï†ïÎ¶¨Ìï¥ ÎìúÎ¶¥Í≤åÏöî
   1. CafeDataÎùºÎäî Ìï®ÏàòÎ•º ÏÑ†Ïñ∏Îßå ÌïòÏãúÍ≥† Ïã§ÌñâÏùÑ ÏïàÌïòÏÖ®ÏäµÎãàÎã§. (+Ïª¥Ìè¨ÎÑåÌä∏ ÎßêÍ≥† Ìï®ÏàòÎ™ÖÏùÄ ÏÜåÎ¨∏ÏûêÎ°ú ÏûëÏÑ±Ìï¥ÏïºÌï¥Ïöî)
   2. server devÎ∏åÎûúÏπòÏùò app.jsÌååÏùºÏùÑ ÌôïÏù∏Ìï¥Î≥¥Îãà apiÏöîÏ≤≠ Ï£ºÏÜåÍ∞Ä /api/cafe-infos/allÏù¥ÎùºÏÑú ÏûòÎ™ªÎêòÏóàÏäµÎãàÎã§.
   3. Ìï®Ïàò ÏÑ†Ïñ∏ÏùÄ useEffect Î∞îÍπ•, CafeList Ïª¥Ìè¨ÎÑåÌä∏ ÎÇ¥Î∂ÄÏóê ÏÑ†Ïñ∏Ìï¥Ï£ºÏÖîÏïºÌï©ÎãàÎã§. 
   4. useEffectÏùò dependencyÎ•º Ïïà Ï£ºÏÖ®ÏäµÎãàÎã§

   useEffectÎäî ÌïúÎ≤à Ïûò Í≥µÎ∂ÄÌï¥ÏÑú Ïù¥Ìï¥Ìï¥Î≥¥ÏÖîÏïºÌï† Í≤É Í∞ôÏïÑÏöî. 
   useEffectÎ•º ÏÇ¨Ïö©ÌïòÎäî Î™©Ï†ÅÏù¥ ÌäπÏ†ï ÏÉÅÌô©Ïóê Îî∞ÎùºÏÑú useEffectÎÇ¥Î∂ÄÏùò Ìï®ÏàòÎ•º Ïã§ÌñâÏãúÌÇ§Í≥† Ïã∂ÏùÄÍ±¥Îç∞
   useEffect ÎÇ¥Î∂ÄÏóê Ìï®ÏàòÎ•º ÏÑ†Ïñ∏ÌïòÏãúÎ©¥ useEffectÍ∞Ä Ïã§ÌñâÌïòÎäî dependency Ï°∞Í±¥Ïóê Ìï¥ÎãπÎê† ÎïåÎßàÎã§
   Ìï®ÏàòÍ∞Ä Í≥ÑÏÜç Î∞òÎ≥µÏ†ÅÏúºÎ°ú ÏÑ†Ïñ∏ÎêòÏÑú Î©îÎ™®Î¶¨ ÎÇ≠ÎπÑ Îì± ÏÑ±Îä• Î¨∏Ï†úÍ∞Ä Î∞úÏÉùÌï¥Ïöî.
   dependencyÎäî useEffectÍ∞Ä 2Í∞úÏùò Ïù∏ÏûêÎ•º Î∞õÎäîÎç∞ Ï≤´Î≤àÏß∏ Ïù∏ÏûêÍ∞Ä callbackÏù¥Í≥† 2Î≤àÏß∏ Ïù∏ÏûêÎ°úÎäî Î∞∞Ïó¥ÏùÑ Î∞õÏïÑÏöî
   Î∞∞Ïó¥ÏïàÏóê [] Ïù¥Î†áÍ≤å ÎπÑÏõåÏ£ºÎ©¥ Ï∞∏Ï°∞Ìï† dependency(Î≥¥ÌÜµ stateÎ•º ÎÑ£Ïñ¥Ï£ºÎäîÍ±∏Î°ú ÏïåÍ≥†ÏûàÏäµÎãàÎã§)Í∞Ä ÏóÜÏúºÎãàÍπå
   Ïª¥Ìè¨ÎÑåÌä∏Í∞Ä mountÎê†Îïå Ïã§Ìñâ, unmountÎê†Îïå Ïù¥Î†áÍ≤å Ï¥ù 2Î≤àÏã§ÌñâÎê©ÎãàÎã§
   Í∑ºÎç∞ dependencyÎ•º Ïïà ÎÑ£Ïñ¥Ï£ºÏãúÎ©¥ ÏïÑÎßàÎèÑ Í∑∏ÎÉ• Î¨¥ÌïúÏúºÎ°ú Ïã§ÌñâÎê†Í±∞ÏóêÏöî
   Í∑∏ÎûòÏÑú 3,4Î≤àÏùò Î¨∏Ï†úÎ•º Ìï©Ïπú ÏÉÅÌÉúÏóêÏÑúÎùºÎ©¥ useEffectÎÇ¥Î∂ÄÏóê Ìï®ÏàòÏÑ†Ïñ∏+dependencyÏóÜÏùå
   Í≥ÑÏÜçÌï¥ÏÑú Ìï®ÏàòÍ∞Ä ÏÑ†Ïñ∏ÎêòÏñ¥ÏÑú Ïã¨Í∞ÅÌïú Î¨∏Ï†úÍ∞Ä ÏÉùÍ∏∏Í±∞ÏóêÏöî
   Ìï®ÏàòÏÑ†Ïñ∏ÏùÑ Ï§ÑÏù¥Í∏∞ ÏúÑÌï¥ÏÑú useCallbackÏù¥ÎùºÎäî hookÎèÑ ÏûàÎäîÎç∞ Ïù¥Í≤ÉÎèÑ Ïù¥ÎØ∏ ÏïåÍ≥† Í≥ÑÏã†Í∞ÄÏöî?? 
   ÎÇòÏ§ëÏóê react components hooks Ï§ëÏöîÌïú Í≤ÉÎì§Îßå ÌïúÎ≤à Ï†ïÎ¶¨Ìï¥Î≥¥ÏãúÎ©¥ Ï¢ãÏùÑ Í≤É Í∞ôÏïÑÏöî
   */
  const getCafeData = async () => {
    const data = await Api.get('http://localhost:3008/api/cafe-infos/all');
    console.log(data);
    setList(data);
  };
  useEffect(() => {
    getCafeData();
  }, []);

  const sortByStarRate = () => {
    const newList = [...list];
    newList.sort((a, b) => b.starRate - a.starRate);
    setList(newList);
  };
  const sortByReviewsSum = () => {
    const newList = [...list];
    newList.sort((a, b) => b.reviewsSum - a.reviewsSum);
    setList(newList);
  };
  const [selected, setSelected] = useState('Ï†ïÎ†¨Í∏∞Ï§Ä');

  return (
    <Background img={'bg2'}>
      <Navigators />
      <ul className='flex flex-row justify-center mx-auto my-5'>
        {REGION_DATA.map((region, index) => (
          <li key={index}>
            <RegionButton title={region} />
          </li>
        ))}
      </ul>

      <div className='border-4 border-blue-500 w-[1200px] h-[600px] flex flex-col '>
        <div className='w-[1200px] h-[50px] flex items-start justify-end'>
          <Listbox value={selected} onChange={setSelected}>
            {({ open }) => (
              <>
                <div className='relative w-40'>
                  <Listbox.Button className='relative w-full cursor-default rounded-md border border-gray-300 bg-white py-2 pl-3 pr-10 text-left shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500 sm:text-sm'>
                    <span className='flex items-center'>
                      <span className='ml-3 block truncate'>{selected}</span>
                    </span>
                    <span className='pointer-events-none absolute inset-y-0 right-0 ml-3 flex items-center pr-2'>
                      <ChevronUpDownIcon className='h-5 w-5 text-gray-400' aria-hidden='true' />
                    </span>
                  </Listbox.Button>

                  <Transition
                    show={open}
                    as={Fragment}
                    leave='transition ease-in duration-100'
                    leaveFrom='opacity-100'
                    leaveTo='opacity-0'>
                    <Listbox.Options className='absolute z-10 mt-1 max-h-56 w-full overflow-auto rounded-md bg-white py-1 text-base shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none sm:text-sm'>
                      <Listbox.Option
                        // key={index}
                        className={({ active }) =>
                          classNames(
                            active ? 'text-white bg-indigo-600' : 'text-gray-900',
                            'relative cursor-default select-none py-2 pl-3 pr-9',
                          )
                        }
                        value='ÌèâÏ†êÏàú'
                        onClick={() => {
                          sortByStarRate();
                        }}>
                        {({ selected, active }) => (
                          <>
                            <div className='flex items-center'>
                              <span
                                className={classNames(
                                  selected ? 'font-semibold' : 'font-normal',
                                  'ml-3 block truncate',
                                )}>
                                {'ÌèâÏ†êÏàú'}
                              </span>
                            </div>

                            {selected ? (
                              <span
                                className={classNames(
                                  active ? 'text-white' : 'text-indigo-600',
                                  'absolute inset-y-0 right-0 flex items-center pr-4',
                                )}>
                                <CheckIcon className='h-5 w-5' aria-hidden='true' />
                              </span>
                            ) : null}
                          </>
                        )}
                      </Listbox.Option>
                      <Listbox.Option
                        // key={index}
                        className={({ active }) =>
                          classNames(
                            active ? 'text-white bg-indigo-600' : 'text-gray-900',
                            'relative cursor-default select-none py-2 pl-3 pr-9',
                          )
                        }
                        value='Î¶¨Î∑∞ ÎßéÏùÄ Ïàú'
                        onClick={() => {
                          sortByReviewsSum();
                        }}>
                        {({ selected, active }) => (
                          <>
                            <div className='flex items-center'>
                              <span
                                className={classNames(
                                  selected ? 'font-semibold' : 'font-normal',
                                  'ml-3 block truncate',
                                )}>
                                {'Î¶¨Î∑∞ ÎßéÏùÄ Ïàú'}
                              </span>
                            </div>

                            {selected ? (
                              <span
                                className={classNames(
                                  active ? 'text-white' : 'text-indigo-600',
                                  'absolute inset-y-0 right-0 flex items-center pr-4',
                                )}>
                                <CheckIcon className='h-5 w-5' aria-hidden='true' />
                              </span>
                            ) : null}
                          </>
                        )}
                      </Listbox.Option>
                    </Listbox.Options>
                  </Transition>
                </div>
              </>
            )}
          </Listbox>
        </div>

        <div className='border border-red-600 w-[1200px] h-[500px] grid grid-cols-3 grid-rows-3 gap-x-4 gap-y-6'>
          {list.map((data) => {
            return (
              <div className='border flex px-[27px] items-center' key={data.cafeId}>
                <div className='border w-[100px] h-[100px]'>
                  <img></img>
                </div>
                <div className='ml-3'>
                  <p className='flex w-full justify-start align-center'>
                    <div>{data.cafeName}</div>
                    <a
                      href={`https://search.naver.com/search.naver?&query=${data.cafeName}`}
                      target='_blank'
                      rel='noopener noreferrer nofollow'>
                      <img
                        className='w-5 h-5 rounded-[4px] ml-2'
                        src={process.env.PUBLIC_URL + '/images/icon/naver-icon.png'}
                      />
                    </a>
                  </p>
                  <p>{data.address}</p>
                  <p>{data.homePage}</p>
                  <p>
                    ÌèâÏ†ê {data.starRate}/10 | Î¶¨Î∑∞ {data.reviewsSum}Í∞ú
                  </p>
                </div>
              </div>
            );
          })}
        </div>
        <div className='border w-[1200px] h-[50px] flex justify-center items-center'>
          <button className='w-[25px] h-[25px] text-sm mx-1 text-white bg-blue-1 border-solid border-[0.5px] rounded border-white'>
            1
          </button>
          <button className='w-[25px] h-[25px] text-sm mx-1 text-white bg-blue-1 border-solid border-[0.5px] rounded border-white'>
            2
          </button>
        </div>
        {/* <Paging></Paging> */}
      </div>
    </Background>
  );
};

export default CafeList;
